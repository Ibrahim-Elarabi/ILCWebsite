@model ILC.BL.Models.Admin.HomeSection.Product.CreateProductHomeVM
@{
    Layout = "_AdminLayout";
    ViewData["Title"] = "Create";
    var categories = ViewBag.Categories as List<ILC.BL.Models.Admin.Categories.CategoryVM>;
    var categorySelectList = categories?.
            Select(c => new SelectListItem
                    {
                        Value = c.Id.ToString(),
                        Text = c.NameEn
                    });
}
<div class="content-wrapper">
    <div class="page-header text-right mb-2">
        <a class="btn btn-primary" asp-controller="ProductHome" asp-action="index">Back to list</a>
    </div>
    <form id="formAdmin" class="forms-sample">
        <div class="row">
            <div class="col-md-8 grid-margin stretch-card">
                <div class="card">
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label asp-for="TitleEn">Title En : </label>
                                    <input type="text" asp-for="TitleEn" class="form-control" placeholder="Title En" />
                                    <span asp-validation-for="TitleEn" style="font-size:.9em; color:red"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label asp-for="TitleEn">Title Ar : </label>
                                    <input type="text" asp-for="TitleAr" class="form-control" placeholder="Title Ar" />
                                    <span asp-validation-for="TitleAr" style="font-size:.9em; color:red"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="DescriptionEn">Description En</label>
                                    <textarea type="text" asp-for="DescriptionEn" class="form-control" id="DescriptionEn"
                                              placeholder="Description En"></textarea>
                                    <span asp-validation-for="DescriptionEn" style="font-size:.9em; color:red"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="DescriptionAr">Description Ar</label>
                                    <textarea type="text" asp-for="DescriptionAr" class="form-control" id="DescriptionAr"
                                              placeholder="Description Ar"></textarea>
                                    <span asp-validation-for="DescriptionAr" style="font-size:.9em; color:red"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="form-label" for="pref-search">Select Category:</label>
                                    <select class="form-control" asp-for="CategoryId" asp-items="categorySelectList"></select>
                                    @* <span asp-validation-for="DescriptionAr" style="font-size:.9em; color:red"></span>*@
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="form-label" for="pref-search">Is Appear In Home</label>
                                    <input type="checkbox" class="form-control" name="IsAppearInHome" value="true" />
                                </div>
                            </div>
                        </div>

                        <input type="hidden" value="/Admin/ProductHome/Create" id="URL" />
                    </div>
                </div>
            </div>

            <div class="col-md-4 grid-margin stretch-card">
                <div class="card">
                    <div class="card-header">
                        Primary card
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="form-group">
                                <label asp-for="ImagePath">Upload Image </label>
                                <input type="file" asp-for="Image" class="file-upload-default" />
                                <span asp-validation-for="Image" style="font-size:.9em; color:red"></span>
                                @await Html.PartialAsync("_PreviewImage", Model?.ImagePath)
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
       

        <div class="row mt-2">
            <!-- Other Images Section -->
            <div class="col-md-8 grid-margin stretch-card">
                @await Html.PartialAsync("_UploadImages");
            </div>
            <!-- Properties Section -->
            <div class="col-md-4 grid-margin stretch-card">
                @await Html.PartialAsync("_AddSpecification");
            </div>
        </div>
        <div class="row mt-2">
            <div class="text-right">
                <button type="submit" class="btn btn-primary me-auto">Save</button>
                <button type="button" class="btn btn-danger me-auto" onclick="clearForm()">Clear</button>
            </div>
        </div>
    </form>
</div>


<!--Add Specification & Display & Delete-->
<script>
    let data = [];

    function generateId() {
        return '_' + Math.random().toString(36).substr(2, 9);
    }

    function addData() {

        const titleEnInput = document.getElementById('specTitleEn');
        const titleArInput = document.getElementById('specTitleAr');
        const DescEnInput = document.getElementById('specDescEn');
        const DescArInput = document.getElementById('specDescAr');

        const titleEnval = titleEnInput.value;
        const titleArval = titleArInput.value;
        const DescEnVal = DescEnInput.value;
        const DescArVal = DescArInput.value;
        //const newKey = keyInput.value;
        //const newValue = valueInput.value;

        if (titleEnval.trim() !== "" && titleArval.trim() !== "" && DescEnVal.trim() !== "" && DescArVal.trim() !== "") {
            data.push({ uniqueId: generateId(), TitleEn: titleEnval, TitleAr: titleArval, DescriptionEn: DescEnVal, DescriptionAr: DescArVal });
            displayData();
            //keyInput.value = "";
            //valueInput.value = "";
            titleEnInput.value = "";
            titleArInput.value = "";
            DescEnInput.value = "";
            DescArInput.value = "";
        }
    }

    function deleteData(id) {
        data = data.filter(item => item.uniqueId !== id);
        displayData();
    }

    function displayData() {
        const tableBody = document.getElementById('table-body');
        tableBody.innerHTML = "";

        data.forEach(item => {
            const row = document.createElement('tr');
            row.innerHTML = `
                                        <td>${item.TitleEn}</td>
                                        <td>${item.TitleAr}</td>
                                        <td><button class="btn btn-danger btn-sm" onclick="deleteData('${item.uniqueId}')">Delete</button></td>
                                    `;
            tableBody.appendChild(row);
        });
    }

    // Initial display
    displayData();
</script>


<style>
    p {
        margin: 0;
    }

    .upload__box {
        padding: 40px;
    }

    .upload__inputfile {
        width: 0.1px;
        height: 0.1px;
        opacity: 0;
        overflow: hidden;
        position: absolute;
        z-index: -1;
    }

    .upload__btn {
        display: inline-block;
        font-weight: 600;
        color: #fff;
        text-align: center;
        min-width: 116px;
        padding: 5px;
        transition: all 0.3s ease;
        cursor: pointer;
        border: 2px solid;
        background-color: #4045ba;
        border-color: #4045ba;
        border-radius: 10px;
        line-height: 26px;
        font-size: 14px;
    }

        .upload__btn:hover {
            background-color: unset;
            color: #4045ba;
            transition: all 0.3s ease;
        }

    .upload__btn-box {
        margin-bottom: 10px;
    }

    .upload__img-wrap {
        display: flex;
        flex-wrap: wrap;
        margin: 0 -10px;
    }

    .upload__img-box {
        width: 200px;
        padding: 0 10px;
        margin-bottom: 12px;
    }

    .upload__img-close {
        width: 24px;
        height: 24px;
        border-radius: 50%;
        background-color: rgba(0, 0, 0, 0.5);
        position: absolute;
        top: 10px;
        right: 10px;
        text-align: center;
        line-height: 24px;
        z-index: 1;
        cursor: pointer;
    }

   .upload__img-close:after {
       content: "✖";
       font-size: 14px;
       color: white;
   }

    .saved_img-close {
        width: 24px;
        height: 24px;
        border-radius: 50%;
        background-color: rgba(0, 0, 0, 0.5);
        position: absolute;
        top: 10px;
        right: 10px;
        text-align: center;
        line-height: 24px;
        z-index: 1;
        cursor: pointer;
    }

        .saved_img-close:after {
            content: "✖";
            font-size: 14px;
            color: white;
        }

    .img-bg {
        background-repeat: no-repeat;
        background-position: center;
        background-size: cover;
        position: relative;
        padding-bottom: 100%;
    }
</style>
@section Scripts{
    <script src="~/js/npm_axios_dist_axios.min.js"></script>
    <partial name="_ValidationScriptsPartial" />
    <script src="~/customscript/shared.js"></script>
    <script>
        function clearForm() {
            document.getElementById("formProduct").reset();
            var imagePreview = document.getElementById("imagePreview");
            imagePreview.src = "";
        }


        //Display Other Images
        jQuery(document).ready(function () {
            ImgUpload();
        });

        function ImgUpload() {
            var imgWrap = "";
            var imgArray = [];

            $('.upload__inputfile').each(function () {
                $(this).on('change', function (e) {
                    imgWrap = $(this).closest('.upload__box').find('.upload__img-wrap');
                    var maxLength = $(this).attr('data-max_length');

                    var files = e.target.files;
                    var filesArr = Array.prototype.slice.call(files);
                    var iterator = 0;
                    filesArr.forEach(function (f, index) {

                        if (!f.type.match('image.*')) {
                            return;
                        }

                        if (imgArray.length > maxLength) {
                            return false
                        } else {
                            var len = 0;
                            for (var i = 0; i < imgArray.length; i++) {
                                if (imgArray[i] !== undefined) {
                                    len++;
                                }
                            }
                            if (len > maxLength) {
                                return false;
                            } else {
                                imgArray.push(f);

                                var reader = new FileReader();
                                reader.onload = function (e) {
                                    var html = "<div class='upload__img-box'><div style='background-image: url(" + e.target.result + ")' data-number='" + $(".upload__img-close").length + "' data-file='" + f.name + "' class='img-bg'><div class='upload__img-close'></div></div></div>";
                                    imgWrap.append(html);
                                    iterator++;
                                }
                                reader.readAsDataURL(f);
                            }
                        }
                    });
                });
            });

            $('body').on('click', ".upload__img-close", function (e) {
                var file = $(this).parent().data("file");
                for (var i = 0; i < imgArray.length; i++) {
                    if (imgArray[i].name === file) {
                        imgArray.splice(i, 1);
                        break;
                    }
                }
                $(this).parent().parent().remove();
            });
        }
    </script>
    <!--Submit CReate Form-->
    <script>
        const prodForm = document.getElementById('formProduct');
        // You can also add a submit event listener to the form itself
        prodForm.addEventListener('submit', function (event) {
            debugger;
            event.preventDefault(); // Prevent the default form submission
            let formData = new FormData(document.getElementById('formProduct'));
            let images = [];
            const files = document.getElementById('otherImagesId').files;

            for (let i = 0; i < files.length; i++) {
                formData.append('Images', files[i]);
            }
            //const specifications = JSON.stringify(data);
            //console.log(specifications);
            //formData.append("specifications", specifications);
            data.forEach((spc, index) => {
                Object.keys(spc).forEach(key => {
                    formData.append(`Specifications[${index}].${key}`, spc[key]);
                });
            });
            //let obj = Object.fromEntries(formData.entries());
            //obj.Specifications = data;
            SubmitPostForm(formData);
        });
    </script>
} 